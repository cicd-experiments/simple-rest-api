name: Deploy to the test system
on: workflow_dispatch

permissions: {}

jobs:
  Checkstyle:
    permissions:
      contents: read
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Make maven wrapper executable
        run: chmod +x mvnw
      - name: Cache maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: "${{ runner.os }}-m2-checksytle-${{ hashFiles('**/pom.xml') }}"
      - name: Run Checkstyle
        run: ./mvnw checkstyle:check
  Test:
    permissions:
      contents: read
    runs-on: ubuntu-22.04
    services:
      test-db:
        image: postgres:17
        ports:
          - 5432:5432
        env:
          TZ: Europe/Moscow
          POSTGRES_DB: test
          POSTGRES_USER: user
          POSTGRES_PASSWORD: pass
    env:
      DATABASE_URL: 127.0.0.1:5432
      DATABASE_NAME: test
      DATABASE_USER: user
      DATABASE_PASS: pass
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Make maven wrapper executable
        run: chmod +x mvnw
      - name: Cache maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: "${{ runner.os }}-m2-test-${{ hashFiles('**/pom.xml') }}"
      - name: Run test
        run: ./mvnw -B test --file pom.xml
  Build_jar:
    permissions:
      contents: read
      packages: write
    needs:
      - Checkstyle
      - Test
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Cache maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: "${{ runner.os }}-m2-build-${{ hashFiles('**/pom.xml') }}"
      - name: Make maven wrapper executable
        run: chmod +x mvnw
      - name: Build with maven
        run: ./mvnw -B package --file pom.xml -Dmaven.test.skip
      - name: Upload jar
        uses: actions/upload-artifact@v4
        with:
          name: jar-and-dockerfile
          path: |
            target/*.jar
            Dockerfile
  Build_and_push_image:
    permissions: read-all
    needs:
      - Build_jar
    runs-on: ubuntu-22.04
    steps:
      - name: Download jar
        uses: actions/download-artifact@v4
        with:
          name: jar-and-dockerfile
      - name: Output values
        run: echo "DOCKERHUB_USERNAME = ${{ vars.DOCKERHUB_USERNAME }} :: 123"
#      - name: Login to Docker Hub
#        uses: docker/login-action@v3
#        with:
#          username: ${{ vars.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v3
#      - name: Build and push
#        uses: docker/build-push-action@v6
#        with:
#          context: .
#          push: true
#          tags: ${{ vars.DOCKERHUB_USERNAME }}/app:latest